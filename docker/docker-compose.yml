version: "3.7"

services:

  nginx:
    container_name: ${PROJECT_NAME:-example}_nginx
    image: nginx:1.14
    restart: unless-stopped
    ports:
      - ${NGINX_PROXY_PORT:-8080}:80
    volumes:
      - ./dockerfiles/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - base-net

  app:
    container_name: ${PROJECT_NAME:-example}_app
    image: maven:3.6-jdk-11
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./../:/app
      - ~/.m2:/root/.m2
    networks:
      - base-net
    depends_on:
      - postgres
    command: mvn clean spring-boot:run

  #  front:
  #    container_name: ${PROJECT_NAME}_front
  #    restart: unless-stopped
  #    networks:
  #      - base-net

  postgres:
    container_name: ${PROJECT_NAME:-example}_postgres
    image: postgres:11.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-qwerty}
      - POSTGRES_DB=${POSTGRES_DB:-example_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dockerfiles/postgres/my-postgres.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - base-net

networks:
  base-net:
    name: ${PROJECT_NAME:-example}-net
    driver: bridge

volumes:
  postgres_data:
    name: ${PROJECT_NAME:-example}_postgres_data
